# Kanbanly 🚀

A sleek, real-time Kanban board app inspired by Trello, built with a mono-repo architecture. Collaborate on workspaces, drag-and-drop cards, and track changes instantly. Perfect for teams and solo productivity!

[![Demo Video](https://img.shields.io/badge/Demo-Watch%20Video-red?style=for-the-badge&logo=youtube)](https://www.youtube.com/watch?v=cemYD8L0RNs)
[![Drag-Drop Demo](https://img.shields.io/badge/Live-Demo-blue?style=for-the-badge&logo=vercel)](https://www.youtube.com/watch?v=OMKPKcaUgqY)
[![GitHub](https://img.shields.io/badge/GitHub-Repository-black?style=for-the-badge&logo=github)](https://github.com/dev-kartikSpace/Mini-Trello-App)


## 🎥 Demo Videos

### App Usage Demo
Watch the app in action, showcasing core features and intuitive interface:

[![App Usage Demo](https://img.youtube.com/vi/YOUR_APP_USAGE_VIDEO_ID/maxresdefault.jpg)](https://www.youtube.com/watch?v=cemYD8L0RNs)

### Real-time Collaboration Demo
See how multiple users collaborate seamlessly with instant synchronization:

[![Collaboration Demo](https://img.youtube.com/vi/YOUR_COLLAB_VIDEO_ID/maxresdefault.jpg)](https://www.youtube.com/watch?v=OMKPKcaUgqY)

---

## 📸 Screenshots

### Application Interface

<div align="center">
  
| 🏠 **Home Page** | 📋 **Board View** | 🎯 **Card Management** |
|:---:|:---:|:---:|
| ![Home Page](./client/src/assets/homePage.png) | ![Board View](./client//src//assets//board.png) |
| *Clean and intuitive landing page* | *Organized board layout with lists* | *Easy card creation and editing* |

</div>

### Key Features in Action

<div align="center">

| 🖱️ **Drag & Drop** | 👥 **Team Collaboration** | 📱 **Responsive Design** |
|:---:|:---:|:---:|
| ![Drag & Drop](./client/src/assets/dragdrop.png) | ![Collaboration](./client/src/assets/collab.png) |
| *Smooth drag and drop functionality* | *Real-time team collaboration* | *Mobile-first responsive design* |

</div>

### User Experience Flow

<div align="center">

| 🔐 **Authentication** | ⚙️ **Settings** | 📊 **Analytics** |
|:---:|:---:|:---:|
| ![Login](./assets/login.png) | ![Settings](./assets/settings.png) | ![Analytics](./assets/analytics.png) |
| *Secure login and registration* | *Customizable user preferences* | *Project insights and metrics* |

</div>

---

## 🛠️ Tech Stack

### **Backend Architecture**
- **🟢 Node.js** - JavaScript runtime for server-side development
- **⚡ Express.js** - Fast, minimalist web framework for API routing
- **🍃 MongoDB** - NoSQL database with Mongoose ODM for flexible data modeling
- **🔌 Socket.IO** - Real-time bidirectional communication engine
- **🔐 JWT** - Secure, stateless authentication tokens
- **🛡️ bcrypt** - Password hashing for enhanced security

### **Frontend Experience**
- **⚛️ React 18** - Modern UI library with hooks and context
- **🎯 React Router** - Declarative routing for single-page applications
- **🎨 Tailwind CSS** - Utility-first CSS framework for rapid styling
- **🎭 @dnd-kit** - Accessible drag-and-drop toolkit
- **🔔 react-toastify** - Elegant notification system
- **🔌 Socket.IO Client** - Real-time client-side synchronization
- **📱 Responsive Design** - Mobile-first approach with breakpoint optimization

### **Why These Technologies?**

```mermaid
graph TD
    A[Node.js Ecosystem] --> B[Full-Stack JavaScript]
    C[MongoDB] --> D[Schema Flexibility]
    E[Socket.IO] --> F[Real-time Collaboration]
    G[React] --> H[Component Architecture]
    I[Tailwind] --> J[Rapid Development]
    K[JWT] --> L[Stateless Security]
```

**Node.js** enables a unified JavaScript environment across the entire stack, reducing context switching and improving developer productivity. **MongoDB's** document-based structure perfectly suits dynamic Kanban data with varying card properties. **Socket.IO** ensures instant updates across all connected clients for seamless collaboration. **React's** component-based architecture makes complex UI state management intuitive. **Tailwind CSS** accelerates development while maintaining design consistency and responsiveness.

---

## 🚀 Quick Start Guide

### **Prerequisites**
- 📦 **Node.js** v18+ ([Download here](https://nodejs.org/))
- 🍃 **MongoDB** (Local installation or [MongoDB Atlas](https://www.mongodb.com/cloud/atlas))
- 🔧 **Git** ([Download here](https://git-scm.com/))
- 📝 **Code Editor** (VS Code recommended)

### **🔧 Installation Steps**

1. **Clone the Repository**
   ```bash
   git clone https://github.com/dev-kartikSpace/Mini-Trello-App.git
   cd kanbanly
   ```

2. **Environment Configuration**
   ```bash
   # Copy environment template
   cp .env.example .env
   
   # Edit .env with your configurations
   nano .env
   ```
   
   **Required Environment Variables:**
   ```env
   # Database
   MONGO_URI=mongodb://localhost:27017/kanbanly
   # or for MongoDB Atlas:
   # MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/kanbanly
   
   # Authentication
   JWT_SECRET=your-super-secret-jwt-key
   JWT_EXPIRE=7d
   
   # Server Configuration
   PORT=5001
   NODE_ENV=development
   
   # Client Configuration
   CLIENT_URL=http://localhost:5173
   ```

3. **Install Dependencies**
   ```bash
   # Install all dependencies using NPM workspaces
   npm install
   ```

4. **Start the Backend Server**
   ```bash
   cd backend
   npm run dev
   ```
   
   ✅ Backend running at `http://localhost:5001`
   ✅ Socket.IO server active for real-time features

5. **Launch the Frontend**
   ```bash
   # In a new terminal
   cd frontend
   npm run dev
   ```
   
   ✅ Frontend running at `http://localhost:5173`

6. **🎉 Access Your App**
   Open `http://localhost:5173` in your browser and start organizing!

---

## 📁 Project Architecture

```
kanbanly/
├── 📂 backend/                 # Server-side application
│   ├── 📂 controllers/         # Request handlers and business logic
│   ├── 📂 middleware/          # Authentication and validation
│   ├── 📂 models/              # MongoDB schemas and models
│   ├── 📂 routes/              # API endpoint definitions
│   ├── 📂 socket/              # Real-time event handlers
│   ├── 📂 utils/               # Helper functions and utilities
│   └── 📄 server.js            # Application entry point
├── 📂 frontend/                # Client-side React application
│   ├── 📂 src/
│   │   ├── 📂 components/      # Reusable UI components
│   │   ├── 📂 pages/           # Route-level components
│   │   ├── 📂 hooks/           # Custom React hooks
│   │   ├── 📂 context/         # Global state management
│   │   ├── 📂 utils/           # Client-side utilities
│   │   └── 📂 assets/          # Images, icons, and media
│   └── 📄 vite.config.js       # Vite configuration
├── 📂 assets/                  # Project screenshots and media
├── 📂 docs/                    # Technical documentation
│   ├── 📄 HLD.md              # High-level design document
│   ├── 📄 LLD.md              # Low-level design document
│   └── 📄 API.md              # API documentation
└── 📄 package.json            # Workspace configuration
```

---

## 🗄️ Database Schema

### **Entity Relationship Overview**

```
┌─────────────┐    1:N    ┌─────────────┐    1:N    ┌─────────────┐
│    User     │◄─────────►│ Workspace   │◄─────────►│    Board    │
├─────────────┤           ├─────────────┤           ├─────────────┤
│ _id         │           │ _id         │           │ _id         │
│ name        │           │ title       │           │ title       │
│ email       │           │ description │           │ description │
│ password    │           │ owner       │           │ workspaceId │
│ avatar      │           │ members[]   │           │ visibility  │
│ createdAt   │           │ createdAt   │           │ members[]   │
└─────────────┘           └─────────────┘           │ createdAt   │
                                                    └─────────────┘
                                                           │
                                                         1:N
                                                           ▼
┌─────────────┐                                  ┌─────────────┐
│ ChangeLog   │                                  │    Card     │
├─────────────┤                                  ├─────────────┤
│ _id         │                                  │ _id         │
│ workspaceId │                                  │ title       │
│ action      │                                  │ description │
│ details     │                                  │ boardId     │
│ user        │                                  │ listId      │
│ timestamp   │                                  │ position    │
└─────────────┘                                  │ assignees[] │
                                                 │ labels[]    │
                                                 │ dueDate     │
                                                 │ createdBy   │
                                                 │ createdAt   │
                                                 └─────────────┘
```

### **Core Collections**

- **👤 User**: Authentication and profile management
- **🏢 Workspace**: Team collaboration spaces
- **📋 Board**: Project organization containers
- **📝 Card**: Individual tasks and items
- **📊 ChangeLog**: Audit trail for all activities

---

## 🤝 Contributing

We welcome contributions! Here's how to get involved:

### **Development Workflow**
1. 🍴 **Fork** the repository
2. 🌿 **Create** a feature branch (`git checkout -b feature/amazing-feature`)
3. 💾 **Commit** your changes (`git commit -m 'Add amazing feature'`)
4. 📤 **Push** to the branch (`git push origin feature/amazing-feature`)
5. 🔄 **Open** a Pull Request

### **Code Style Guidelines**
- Follow ESLint and Prettier configurations
- Write meaningful commit messages
- Add JSDoc comments for functions
- Include unit tests for new features

### **Reporting Issues**
Found a bug or have a suggestion? [Open an issue](https://github.com/dev-kartikSpace/Mini-Trello-App/issues) with:
- Clear description
- Steps to reproduce
- Expected vs actual behavior
- Screenshots if applicable

---

## 📄 License

This project is licensed under the **MIT License** - see the [LICENSE](LICENSE) file for details.

---

## 🙏 Acknowledgments

- **Made with ❤️ by [Your Name]**
- Inspired by Trello's intuitive design
- Built with modern web technologies
- Special thanks to the open-source community

---

## 📚 Additional Resources

- 📖 [High-Level Design](./docs/HLD.md) - Architecture overview
- 🔧 [Low-Level Design](./docs/LLD.md) - Detailed technical specifications  
- 🌐 [API Documentation](./docs/API.md) - Complete endpoint reference
- 💬 [Discussions](https://github.com/dev-kartikSpace/Mini-Trello-App)

---

<div align="center">

**⭐ Star this repo if you found it helpful!**

[![GitHub stars](https://img.shields.io/github/stars/your-username/kanbanly?style=social)](https://github.com/dev-kartikSpace/Mini-Trello-App/stargazers)
[![GitHub forks](https://img.shields.io/github/forks/your-username/kanbanly?style=social)](https://github.com/dev-kartikSpace/Mini-Trello-App/network)

</div>